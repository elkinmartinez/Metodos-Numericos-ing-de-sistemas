import matplotlib.pyplot as plt
import math

iter1,iter2,valorexac,Et1,Et2,Ea1,Ea2,Xr1,Xr2 = [],[],14.780204,[],[],[],[],[],[]
Xl,Xu,Xr,fun1,fun2 = 0.0,1.3,0.0,1.0,1.0

def evaluar(valor):
    fun = valor**10-1
    return fun
n=0

while n<115:
    Xrant = Xr
    Xr =  Xu-(evaluar(Xu)*(Xl-Xu)/(evaluar(Xl)-evaluar(Xu)))
    Et1.append((abs(1-Xr)/1)*100)
    Ea1.append((abs(Xr-Xrant)/Xr)*100)
    Xr1.append(Xr)
    fun1 = evaluar(Xl)
    fun2 = evaluar(Xr)
    if (fun1*fun2)<0:
        Xu = Xr
    if (fun1*fun2)>0:
        Xl = Xr
    iter1.append(n)
    n = n+1
n=0
Xl,Xu,Xr,fun1,fun2 = 0.0,1.3,0.0,1.0,1.0

while n<40:   
    Xrant = Xr
    Xr =  (Xl+Xu)/2
    Et2.append((abs(1-Xr)/1)*100)
    Ea2.append((abs(Xr-Xrant)/Xr)*100)
    Xr2.append(Xr)
    fun1 = evaluar(Xl)
    fun2 = evaluar(Xr)
    if (fun1*fun2)<0:
        Xu = Xr
    if (fun1*fun2)>0:
        Xl = Xr
    iter2.append(n)
    n = n+1   
n=0
print "Iteracion     Xr biseccion     Xr falsa pos     Et biseccion     Et falsa pos     Ea biseccion     Ea falsa pos"    
while n<40:
    print "%s             %f         %f          %f       %f          %f        %f"%(n+1,Xr2[n],Xr1[n],Et2[n],Et1[n],Ea2[n],Ea1[n])
    n = n+1
    
plt.ylabel('Error relativo porcentual')
plt.xlabel('iteraciones')
plt.plot(iter1, Et1,label="Et metodo falsa posicion")
plt.plot(iter2, Et2,label="Et metodo biseccion")
plt.plot(iter1, Ea1,label="Ea metodo falsa posicion")
plt.plot(iter2, Ea2,label="Ea metodo biseccion")
plt.axis([-5, 50, -5, 100])
plt.grid(True)
plt.legend()
plt.show()
